* {
  box-sizing: border-box;
  font-family: sans-serif;
}

body {
  margin: 0;
  padding: 0;
}

button {
  cursor: pointer;
}

img {
  width: 100%;
  height: 100%;
  display: block;
}

p {
  margin: 0;
}

span {
  font-weight: bolder;
}

header {
  width: 100%;
  margin: 0 auto;
  min-height: 50px;
  box-shadow: 0 0 4px rgb(0 0 0 / 30%);
  padding: 10px;
  display: flex;
  align-items: center;
}

form {
  width: 90%;
  margin: 10px auto;
  /* padding: 10px; */
  /* background: #aaa; */
  display: grid;
  border: 1px solid #000;
  border-radius: 10px;
}

input[type="text"] {
  font-size: 20px;
  padding: 10px;
  margin: 0;
  border: none;
  outline: none;
  border-radius: 10px;
}

.Container {
  width: 90%;
  margin: 10px auto;
  padding: 10px;
  display: grid;
  grid-gap: 10px;
  border-radius: 10px;
  /* box-shadow: 0 0 4px rgb(0 0 0 / 30%); */
  grid-template-columns: repeat(4, 1fr);
}

article {
  border-radius: 10px;
  box-shadow: 0 0 4px rgb(0 0 0 / 30%);
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
  transition: 800ms;
}

.Cover {
  width: 100%;
  height: 100%;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 0 4px rgb(0 0 0 / 30%);
}

.Info {
  width: 100%;
}

.Info h2 {
  transition: 800ms;
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: center;
}



body.dark {
  background: rgb(18, 18, 18);
}
body.dark header {
  background: rgba(255, 255, 255, .13);
}
body.dark form {
  box-shadow: 0 0 10px rgb(255 255 255 / 50%);
}
body.dark article {
  background: rgba(255, 255, 255, 0.13);
  color: rgba(255, 255, 255, 0.7);
}
body.dark article:hover {
  background: rgba(255, 255, 255, 0.16);
}
body.dark article a {
  color: rgb(69,179,224);
  transition: 800ms;
}
body.dark article a:hover {
  color: rgb(31,141,186);
}


@media only screen and (max-width: 900px) {
  .Container {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media only screen and (max-width: 640px) {
  .Container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media only screen and (max-width: 480px) {
  .Container {
    grid-template-columns: 1fr;
  }
}